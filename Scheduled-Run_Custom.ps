# Prompt the user for the schedule settings
$scheduleTrigger = Read-Host "Enter a schedule (e.g., 'Once', 'Daily', 'Weekly', etc.)"

# Define the default values for day, date, and time in 24-hour format
$day = "Monday"
$date = (Get-Date).ToString("yyyy-MM-dd")
$time = "00:00"

# If the user chooses "Once," prompt for the specific date and time
if ($scheduleTrigger -eq "Once") {
    $date = Read-Host "Enter the date (e.g., 'yyyy-MM-dd') [default: today]"
    if ($date -eq "") {
        $date = (Get-Date).ToString("yyyy-MM-dd")
    }

    $time = Read-Host "Enter the time (e.g., '01:00') [default: 00:00]"
    if ($time -eq "") {
        $time = "00:00"
    }
} elseif ($scheduleTrigger -eq "Weekly") {
    $day = Read-Host "Enter the day of the week (e.g., 'Monday', 'Tuesday', etc.)"
    
    $time = Read-Host "Enter the time (e.g., '01:00') [default: 00:00]"
    if ($time -eq "") {
        $time = "00:00"
    }
} elseif ($scheduleTrigger -eq "Daily") {
    $time = Read-Host "Enter the time (e.g., '01:00') [default: 00:00]"

    if ($time -eq "") {
        $time = "00:00"
    }
}

# Prompt the user for the command to run, operation, or file path
$input = Read-Host "Enter the command to run, operation, or file path"

# Split the input to analyze it
$inputParts = $input -split " "
$commandToRun = $inputParts[0]
$filePathOrOperation = $inputParts[1]

# Define the scheduled task action
$action = New-ScheduledTaskAction -Execute $commandToRun -Argument $filePathOrOperation

# Define the scheduled task trigger based on the user input
$trigger = New-ScheduledTaskTrigger -AtStartup

if ($scheduleTrigger -eq "Once") {
    $startDateTime = "$date $time"
    $trigger = New-ScheduledTaskTrigger -Once -At $startDateTime
} elseif ($scheduleTrigger -eq "Daily") {
    $trigger = New-ScheduledTaskTrigger -Daily -At $time
} elseif ($scheduleTrigger -eq "Weekly") {
    $trigger = New-ScheduledTaskTrigger -Weekly -At $time -DaysOfWeek $day
}

# Register the scheduled task 
Register-ScheduledTask -TaskName "ScheduledTaskName" -Action $action -Trigger $trigger

# Provide feedback to the user
Write-Host "Scheduled task created to run '$commandToRun' with operation '$filePathOrOperation' $scheduleTrigger at $day, $time."
